<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
  <!--<script src="//mrrio.github.io/jsPDF/dist/jspdf.debug.js"></script>-->
  <script src="http://mrrio.github.io/jsPDF/dist/jspdf.debug.js"></script>
  <script src="javascripts/pdfmake.min.js" type="text/javascript"></script>
  <script src="javascripts/vfs_fonts.js" type="text/javascript"></script>
  </head>
  <body>
    <div class="header">
    <% include templates/header.ejs %>
    </div>
    <!-- <form action="/add" method="POST"><input type="text" name="fff"><input type="submit"></form> -->
    <div class="main"> 
          <div class="span6" style="float: left">
          <iframe class="preview-pane" type="application/pdf" width="350px" height="600px" 
          frameborder="0" style="position:relative;z-index:999"></iframe>
        </div>
    <script>
    function getBase64FromImageUrl(url) {
    var img = new Image();

    img.setAttribute('crossOrigin', 'anonymous');

    img.onload = function () {
        var canvas = document.createElement("canvas");
        canvas.width =this.width;
        canvas.height =this.height;

        var ctx = canvas.getContext("2d");
        ctx.drawImage(this, 0, 0);

        var dataURL = canvas.toDataURL("image/png");

        // alert(dataURL.replace(/^data:image\/(png|jpg);base64,/, ""));
    };

    img.src = url;
}

// var cod; = getBase64FromImageUrl("images/a.png");
var cod;
function getDataUri(url, callback) {
    var image = new Image();

    image.onload = function () {
        var canvas = document.createElement('canvas');
        canvas.width = this.naturalWidth; // or 'width' if you want a special/scaled size
        canvas.height = this.naturalHeight; // or 'height' if you want a special/scaled size

        canvas.getContext('2d').drawImage(this, 0, 0);

        // Get raw image data
        callback(canvas.toDataURL('image/png').replace(/^data:image\/(png|jpg);base64,/, ''));

        // ... or get as Data URI
        callback(canvas.toDataURL('image/png'));
    };

    image.src = url;
}

// Usage
getDataUri('images/a.png', function(dataUri) {
    // Do whatever you'd like with the Data URI!
    cod = dataUri;
    console.log("77777777777777777!!!!!!!777777");
    console.log("HERE" + dataUri);
});
var dd = {
    content: [
    // if you don't need styles, you can use a simple string to define a paragraph
    'This is a standard paragraph, using default style',

        {
            // image: 'b',
            // width: 150
        },
    // using a { text: '...' } object lets you set styling properties
    { text: 'This paragraph will have a bigger font', fontSize: 15 },

    // if you set the value of text to an array instead of a string, you'll be able
    // to style any part individually
    <% for (var i=10; i < 20; i++) { %>
    {
      
      text: [
        'This paragraph is defined as an array of elements to make it possible to ',
        { text: 'restyle part of it and make it bigger ', fontSize: <%= i %> },
        'than the rest.'
      ]
      
    },
    <%}%>

  ],
    images: {b: getDataUri('images/a.png', function(dataUri) {})  }
};

var doc = pdfMake.createPdf(dd);
doc.getDataUrl(function (result) {
    $('.preview-pane').attr('src', result);
});

function preparePDF() {
      var x = 10;     // left horizontal border
      var y = 20;     // top vertical border
      var maxX = x+190; // right horizontal border
      var midX = x+38;
      var interval = 8; // between the normal lines
        var sometext = "A HTML5 client-side solution for generating PDFs. Perfect for event tickets, reports, certificates, you name it!No servers w";
        doc.setFontSize(25);
    doc.text(x, y, "<%= person.fullName %>"); // first and last names
    // doc.text(5,5, a);
    doc.setLineWidth(0.5);
    doc.line(x, y+10, maxX, y+10);    // line
    doc.setFontSize(14);
    doc.setTextColor(255, 255, 255);
    doc.rect(x-1, y+30-1, 34, 7, 'F');
    doc.rect(x-1, y+30*2-1, 34, 7, 'F');
    doc.rect(x-1, y+30*3-1, 34, 7, 'F');
    doc.rect(x-1, y+30*4-1, 34, 15, 'F');
    doc.rect(x-1, y+30*5-1, 34, 7, 'F');
    doc.textEx("CONTACT", x, y+30, "left");
    doc.textEx("PERSONAL", x, y+30*2, "left");
    doc.textEx("EDUCATION", x, y+30*3, "left");
    doc.textEx("WORK", x, y+30*4, "left");doc.textEx("EXPERIENCE", x, y+30*4+8, "left");
    doc.textEx("SKILLS", x, y+30*5, "left");

    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    doc.textEx("Email: <%= person.email %>", maxX, y+30, "right");
    doc.textEx("Phone: <%= person.phone %>", maxX, y+30+interval, "right");
    doc.textEx("<%= person.address %>", midX, y+30, "left");
    
    doc.textEx("Date of birth: <%= person.born %>", midX, y+30*2, "left");        // DOB
    doc.textEx("Citizenship: <%= person.citizenship %>", midX, y+30*2+interval*1, "left");  // citizenship

    <% for (var i=0; i < person.education.length; i++) { %>
      doc.setFontType("bold");
      doc.textEx("<%= person.education[i].university %>", midX, y+30*3+interval*<%= i*2 %>, "left");      // uni
      doc.setFontType("normal");
      doc.textEx("<%= person.education[i].faculty %>", midX, y+30*3+interval*(<%= i*2 %>+1), "left");     // faculty
      doc.textEx("<%= person.education[i].from %> - <%= person.education[i].till %>", maxX, y+30*3+interval*<%= i*2 %>, "right");
    <% }%>
    console.log("<%= person.education.length %> edu length")
    var string = doc.output('bloburi');
    // console.log("person.citizenship");
    $('.preview-pane').attr('src', string);
}

    // preparePDF();
    function demoFromHTML() {
        
        specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function (element, renderer) {
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        };
        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        doc.fromHTML(
        source, // HTML string or DOM elem ref.
        margins.left, // x coord
        margins.top, { // y coord
            'width': margins.width, // max width of content on PDF
            'elementHandlers': specialElementHandlers
        },

        function (dispose) {
            // dispose: object with X, Y of the last line add to the PDF 
            //          this allow the insertion of new lines after html
             doc.save('Test.pdf');
        }, margins);
    }



</script>

<div id="content">
    <h1>  
        
    </h1>
</div>
    <p>Please fill the fields below</p>
    <form action="/add" method="POST">
      Full name <input type="text" name="full_name" value="Alexandru Oat"><br/><br/>
      Date of birth <input type="date" name="born" max="2002-12-31" value="1982-03-23"><br/><br/>
      Email <input type="email" name="email" value="oat.alexandru@gmail.com"><br/><br/>
      Phone <input type="text" name="phone" value="+358466360623"><br/><br/>
      Address <input type="text" name="address" value="Rälssintie 16 B 14 Helsinki"><br/><br/>
      Citizenship <input type="text" name="citizenship" value="Moldova"><br/><br/>
      Education University <input type="text" name="university" value="Haaga-Helia University of Applied Sciences">
      Faculty <input type="text" name="faculty" value="Business Information Technology">
      Period from <input type="month" name="edu_from" value="2013-08">till <input type="month" name="edu_till" value="2016-12"><br/><br/>
      <input type="submit" value="Preview">
    </form>
    <!-- <script type="text/javascript">console.log("!!!");</script>-->
    <!-- <img src="images/m.jpeg"/> -->
    <br/><br/><br/><br/><br/><br/><br/><br/>
    <a href="javascript:demoFromHTML()" class="button">Download PDF</a>
    <canvas id="demo" width=400 height=100></canvas>
    <input id="inputFileToLoad" type="file" onchange="encodeImageFileAsURL();" />
<div id="imgTest"></div>
<script type='text/javascript'>

</script>
    </div>
    <div class="footer"> <% include templates/footer.ejs %></div>
  </body>
</html>
